#!/usr/bin/env bash

#############################################################
#                     subsetFASTA                           #
#                    Sami El Hilali                         #
#                      2021/04/12                           #
#############################################################

# This script takes a list of proteins names and retrieves the corresponding Orthogroups
# from Orthofinder's output

################ PARSE PARAMETERS :
unset FASTA_TO_SUBSET
unset LIST_OF_ENTRIES
unset OUTPUT_FASTA_FILE

usage()
{
 echo " --- subset a FASTA file to get the sequences of a provided list of sequence IDs --- usage :"
 echo "-f FASTA database containing the sequences to extract"
 echo "-l list of IDs (raw text file without \">\" in front of the IDs) "
 echo "-o Output file to write with the sequences"
 echo "-h prints this message and exit"
}

while getopts f:l:o:h option
do
	case "${option}" in
	f) FASTA_TO_SUBSET=${OPTARG};;
	l) LIST_OF_ENTRIES=${OPTARG};;
	o) OUTPUT_FASTA_FILE=${OPTARG};;
	h) usage
	   exit;;
	?) usage
           exit;;
	esac
done

if [ -z "$FASTA_TO_SUBSET" ]
then
 usage
 exit
fi

if [ -z "$LIST_OF_ENTRIES" ]
then
 usage
 exit
fi

if [ -z "$OUTPUT_FASTA_FILE" ]
then
 usage
 exit
fi

#########################
# exit if a command fails 
set -e
########

AMOUNT_OF_ENTRIES=($(wc -l $LIST_OF_ENTRIES | awk '{print $1}'))
echo "-- subsetting $AMOUNT_OF_ENTRIES sequences to $OUTPUT_FASTA_FILE --"

############### RUN :
grep ">" -n $FASTA_TO_SUBSET \
| sed -e 's/>//g' -e 's/:/\t/g' \
| awk '{print $2"\t"$1}' \
| awk 'NR > 1 {print prev, $2} {prev = $0} END {print prev}' \
| awk '{print $1"\t"$2+1"\t"$3-1}' \
| grep -f $LIST_OF_ENTRIES > temp.fasta_map.tab
# replace the entrie of the last line by its actual value
END_OF_LAST_ENTRIE=($(wc -l $FASTA_TO_SUBSET | awk '{print $1}'))
sed -e "s/\t-1/\t$END_OF_LAST_ENTRIE/g" temp.fasta_map.tab > temp.fasta_map.tab.corrected

### Extract the sequence and write to output fasta file
touch $OUTPUT_FASTA_FILE && rm $OUTPUT_FASTA_FILE

while read -r entrie_id start_entrie stop_entrie
do
 echo ">$entrie_id" >> $OUTPUT_FASTA_FILE
 awk -v st="$start_entrie" -v sp="$stop_entrie" '{ if (NR >= st && NR <= sp) print}' $FASTA_TO_SUBSET >> $OUTPUT_FASTA_FILE
done < temp.fasta_map.tab.corrected

### remove temporary files :
rm temp.fasta_map.tab*

echo "-- done --"
